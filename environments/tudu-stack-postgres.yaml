name: Tudu Stack (Postgres)
ref: tudu-stack-postgres
description: Running the complete series of services to support the TuDu product.
version: 1.0.0
tools:
  - ref: go_air
  - ref: go
  - ref: nodejs
  - ref: pnpm
containers:
  - container_name: postgres
    ref: postgres
    image: postgres:16-alpine
    environment:
      - POSTGRES_USER={{ .SVar `postgres_user` }}
      - POSTGRES_PASSWORD={{ .SVar `postgres_password` }}
      - POSTGRES_DB={{ .SVar `postgres_schema` }}
    ports:
      - '{{ .SVar `postgres_port` }}:5432'
apps:
  - name: Tudu Ts React Frontend
    ref: tudu-ts-react-frontend
    repository_url: https://github.com/joy-dx/tudu-ts-react-frontend
    config:
      build:
        - name: install dependencies
          action_ref: core.os_exec
          configuration:
            command:
              - '{{ .SVar `.env.bin` }}/pnpm'
              - i
            working_dir: '{{ .SVar `.apps.tudu-ts-react-frontend.root` }}'
      dev:
        - name: run frontend development
          action_ref: core.os_exec
          configuration:
            background: true
            command:
              - '{{ .SVar `.env.bin` }}/pnpm'
              - dev
            working_dir: '{{ .SVar `.apps.tudu-ts-react-frontend.root` }}'
  - name: Tudu Go Gin Backend
    ref: tudu-go-gin-backend
    repository_url: https://github.com/joy-dx/tudu-go-gin-backend
    config:
      environment:
        - TODO_POSTGRES_DSN=postgres://{{ .SVar `postgres_user` }}:{{ .SVar `postgres_password` }}@localhost:{{ .SVar `postgres_port` }}/{{ .SVar `postgres_schema` }}?sslmode=disable
      build:
        - name: standard go build
          action_ref: core.os_exec
          configuration:
            command:
              - '{{ .SVar `.env.bin` }}/go'
              - build
              - -o
              - '{{ .SVar `.env.bin` }}/tudu-backend'
              - main.go
            working_dir: '{{ .SVar `.apps.tudu-go-gin-backend.root` }}'
      dev:
        - name: run migrations
          action_ref: core.os_exec
          configuration:
            command:
              - '{{ .SVar `.env.bin` }}/go'
              - run
              - main.go
              - db
              - migrate
            working_dir: '{{ .SVar `.apps.tudu-go-gin-backend.root` }}'
        - name: setup test data
          action_ref: core.os_exec
          configuration:
            command:
              - '{{ .SVar `.env.bin` }}/go'
              - run
              - main.go
              - db
              - fixtures
            working_dir: '{{ .SVar `.apps.tudu-go-gin-backend.root` }}'
        - name: run backend development mode
          action_ref: core.os_exec
          configuration:
            background: true
            command:
              - '{{ .SVar `.env.bin` }}/air'
            working_dir: '{{ .SVar `.apps.tudu-go-gin-backend.root` }}'
vars:
  postgres_password: development
  postgres_port: "5432"
  postgres_schema: development
  postgres_user: development
